@model Hht.SampleInspection.Models.ValveTestResult

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>ValveTestResult</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.PartReceivedId, "PartReceivedId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PartReceivedId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PartReceivedId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Step03TestResultId, "Result3 - Visual Insp, damaged screws/debris", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Step03TestResultId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Step03TestResultId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Step04TestResultId, "Result4 - Drop/Impact datage check", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Step04TestResultId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Step04TestResultId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Step05mH, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Step05mH, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Step05mH, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Step06mH, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Step06mH, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Step06mH, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Step13TestResultId, "Result13 - Gas leaks at valve and pilot", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Step13TestResultId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Step13TestResultId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Step10High, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Step10High, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Step10High, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Step10Low, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Step10Low, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Step10Low, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Step11TestResultId, "Result11 - Flame Height Adjustment Works", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Step11TestResultId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Step11TestResultId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Step08TestResultId, "Result8 - Flame goes out burner and pilot", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Step08TestResultId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Step08TestResultId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Step05Ohms, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Step05Ohms, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Step05Ohms, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Step06Ohms, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Step06Ohms, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Step06Ohms, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
