@model Hht.SampleInspection.Models.ValveTestResult

@*20160401 LCJ Create classes to change background depending on test results*@
@*             Each PassFailDesc or ResultDesc will have either pass or fail to change the background. Javascript clicks the Validate button to trigger a post and change the background.*@
<style type="text/css">
    .pass {
        background-color: palegreen;
    }
    .undetermined {
    }
    .fail {
        background-color: lightpink;
    }
</style>

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ValveTestResult</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.PartReceivedId)

        <div class="form-group">
            @Html.LabelFor(model => model.Step03TestResultId, "Result3 - Visual Insp, damaged screws/debris", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Step03TestResultId", null, htmlAttributes: new { @id = "Step03TestResult", @class = "form-control " + Model.PassFail03.PassFail03Desc , onchange= "$('#Validate03').click();"})
                @Html.ValidationMessageFor(model => model.Step03TestResultId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Step05mH, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Step05mH, new { htmlAttributes = new { @class = "form-control " + ViewBag.Step05mhResultDesc } })
                @Html.ValidationMessageFor(model => model.Step05mH, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Step06mH, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Step06mH, new { htmlAttributes = new { @class = "form-control " + ViewBag.Step06mhResultDesc } })
                @Html.ValidationMessageFor(model => model.Step06mH, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Step13TestResultId, "Result13 - Gas leaks at valve and pilot", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Step13TestResultId", null, htmlAttributes: new { @id = "Step13TestResult", @class = "form-control " + Model.PassFail13.PassFail13Desc, onchange = "$('#Validate13').click();" })
                @Html.ValidationMessageFor(model => model.Step13TestResultId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Step10Low, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Step10Low, new { htmlAttributes = new { @class = "form-control " + ViewBag.Step10LowResultDesc } })
                @Html.ValidationMessageFor(model => model.Step10Low, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Step10High, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Step10High, new { htmlAttributes = new { @class = "form-control " + ViewBag.Step10HighResultDesc } })
                @Html.ValidationMessageFor(model => model.Step10High, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Step11TestResultId, "Result11 - Flame Height Adjustment Works", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Step11TestResultId", null, htmlAttributes: new { @id = "Step11TestResult", @class = "form-control " + Model.PassFail11.PassFail11Desc, onchange = "$('#Validate11').click();" })
                @Html.ValidationMessageFor(model => model.Step11TestResultId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Step08TestResultId, "Result8 - Flame goes out on burner and pilot", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Step08TestResultId", null, htmlAttributes: new { @id = "Step08TestResult", @class = "form-control " + Model.PassFail08.PassFail08Desc, onchange = "$('#Validate08').click();" })
                @Html.ValidationMessageFor(model => model.Step08TestResultId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Step05Ohms, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Step05Ohms, new { htmlAttributes = new { @class = "form-control " + ViewBag.Step05OhmsResultDesc } })
                @Html.ValidationMessageFor(model => model.Step05Ohms, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Step06Ohms, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Step06Ohms, new { htmlAttributes = new { @class = "form-control " + ViewBag.Step06OhmsResultDesc } })
                @Html.ValidationMessageFor(model => model.Step06Ohms, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @*20160331 LCJ Invisible buttons used to display visual cues and return to edit*@
                <input name="button" id="Validate03" type="submit" value="Validate03" class="btn btn-default" style="display: none;" />
                <input name="button" id="Validate05" type="submit" value="Validate05" class="btn btn-default" style="display: none;" />
                <input name="button" id="Validate06" type="submit" value="Validate06" class="btn btn-default" style="display: none;" />
                <input name="button" id="Validate13" type="submit" value="Validate13" class="btn btn-default" style="display: none;" />
                <input name="button" id="Validate10Low" type="submit" value="Validate10Low" class="btn btn-default" style="display: none;" />
                <input name="button" id="Validate10High" type="submit" value="Validate10High" class="btn btn-default" style="display: none;" />
                <input name="button" id="Validate11" type="submit" value="Validate11" class="btn btn-default" style="display: none;" />
                <input name="button" id="Validate08" type="submit" value="Validate08" class="btn btn-default" style="display: none;" />
                <input name="button" id="Validate05Ohms" type="submit" value="Validate05Ohms" class="btn btn-default" style="display: none;" />
                <input name="button" id="Validate06Ohms" type="submit" value="Validate06Ohms" class="btn btn-default" style="display: none;" />

                <input name="button" id="CreateNewPartReceived" type="submit" value="CreateNewPartReceived" class="btn btn-default" />

                <input name="button" id="EditThisPartReceived" type="submit" value="EditThisPartReceived" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @*2016-03-10 LCJ Replace link to redirect to PartReceiveds details instead of listing ValveTestResults details*@
    @*@Html.ActionLink("Back to List", "Index")*@

    @*@Html.ActionLink("Back to Edit PartReceived", "Edit", "PartsReceived", new { id = Model.PartReceivedId }, null)*@
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        var lastField = '@(ViewBag.lastField)';

        $(document).ready(function () {

            //20160422 LCJ Click a validate button to display visual cues depending on the value entered
            $('#Step05mH').on('change', function () {
                $('#Validate05').click();
            });
            $('#Step06mH').on('change', function () {
                $('#Validate06').click();
            });
            $('#Step10High').on('change', function () {
                $('#Validate10High').click();
            });
            $('#Step10Low').on('change', function () {
                $('#Validate10Low').click();
            });
            $('#Step05Ohms').on('change', function () {
                $('#Validate05Ohms').click();
            });
            $('#Step06Ohms').on('change', function () {
                $('#Validate06Ohms').click();
            });

            //20160422 LCJ Moves to the next field after data was changed
            switch (lastField) {
                case 'Step03TestResult':
                    $('#Step05mH').focus();
                    break;
                case 'Step05mH':
                    $('#Step06mH').focus();
                    break;
                case 'Step06mH':
                    $('#Step13TestResult').focus();
                    break;
                case 'Step13TestResult':
                    $('#Step10Low').focus();
                    break;
                case 'Step10Low':
                    $('#Step10High').focus();
                    break;
                case 'Step10High':
                    $('#Step11TestResult').focus();
                    break;
                case 'Step11TestResult':
                    $('#Step08TestResult').focus();
                    break;
                case 'Step08TestResult':
                    $('#Step05Ohms').focus();
                    break;
                case 'Step05Ohms':
                    $('#Step06Ohms').focus();
                    break;
                case 'Step06Ohms':
                    $('#CreateNewPartReceived').focus();
                    break;
                default:
                    $('#Step03TestResult').focus();
            } //switch

        });
    </script>
}
